function main() {
  // Define keywords for each category
  const keywords = {
    Derivatives: [
      "options",
      "futures",
      "forwards",
      "swaps",
      "hedging",
      "derivative",
      "ตราสารอนุพันธ์",
      "ออปชั่น",
      "ฟิวเจอร์ส",
      "สัญญาซื้อขายล่วงหน้า",
      "การป้องกันความเสี่ยง",
    ],
    FixedIncome: [
      "bond",
      "yield curve",
      "duration",
      "credit analysis",
      "fixed income",
      "พันธบัตร",
      "ตราสารหนี้",
      "อัตราผลตอบแทนพันธบัตร",
      "การวิเคราะห์เครดิต",
    ],
    AlterInvest: [
      "real estate",
      "private equity",
      "hedge funds",
      "commodities",
      "structured products",
      "crypto assets",
      "alternative investment",
      "venture capital",
      "อสังหาริมทรัพย์",
      "กองทุนส่วนบุคคล",
      "สินค้าโภคภัณฑ์",
      "สินทรัพย์ทางเลือก",
      "คริปโตเคอร์เรนซี",
    ],
    EquityInvest: [
      "stock",
      "equity",
      "valuation",
      "equity markets",
      "company analysis",
      "market efficiency",
      "หุ้น",
      "การประเมินมูลค่าหุ้น",
      "ตลาดหุ้น",
      "ตราสารทุน",
    ],
    CorpIssuers: [
      "capital structure",
      "dividend policy",
      "corporate governance",
      "mergers & acquisitions",
      "capital budgeting",
      "corporate finance",
      "issuer",
      "การควบรวมกิจการ",
      "โครงสร้างเงินทุน",
      "นโยบายเงินปันผล",
      "บรรษัทภิบาล",
      "การจัดทำงบประมาณลงทุน",
      "การเงินองค์กร",
    ],
    PortManage: [
      "asset management",
      "mutual fund",
      "portfolio",
      "investment",
      "risk management",
      "return",
      "asset allocation",
      "portfolio construction",
      "rebalancing",
      "performance measurement",
      "สินทรัพย์",
      "กองทุน",
      "การลงทุน",
      "ผลตอบแทน",
      "ความเสี่ยง",
      "การจัดการพอร์ต",
      "การจัดสรรสินทรัพย์",
      "กองทุนรวม",
      "การวัดผลการดำเนินงาน",
    ],
    FinancialReporting: [
      "audit",
      "internal controls",
      "financial statements",
      "balance sheet",
      "income statement",
      "cash flow",
      "accounting",
      "auditing",
      "IFRS",
      "GAAP",
      "ตรวจสอบ",
      "งบการเงิน",
      "บัญชี",
      "งบดุล",
      "งบกำไรขาดทุน",
      "งบกระแสเงินสด",
      "return on total assets",
      "net profit margin",
      "inventory",
      "การตรวจสอบบัญชี",
      "มาตรฐานการบัญชี",
      "อัตราส่วนทางการเงิน",
      "การเงินและการบัญชี",
      "ต้นทุน",
      "การวิเคราะห์งบการเงิน",
    ],
    QuantMeth: [
      "population",
      "sampling",
      "regression",
      "statistics",
      "สูตร",
      "สถิติ",
      "mathematics",
      "calculation",
      "คำนวณ",
      "ตัวเลข",
      "data analysis",
      "ข้อมูล",
      "การวิเคราะห์",
      "Johansen",
      "VAR",
      "OLS estimator",
      "confidence interval",
      "forecast accuracy",
      "parameters",
      "eigenvalue",
      "unbiasedness",
      "efficiency",
      "variance",
      "covariance",
      "สมการ",
      "ทดสอบ",
      "ความน่าจะเป็น",
      "สมมติฐาน",
      "อนุกรมเวลา",
      "การถดถอย",
      "การคาดการณ์",
      "time value of money",
      "TVM",
      "hypothesis testing",
      "probability",
    ],
    Economics: [
      "GDP",
      "monetary policy",
      "fiscal policy",
      "inflation",
      "unemployment",
      "economic growth",
      "interest rates",
      "aggregate demand",
      "supply",
      "market",
      "exchange rate",
      "ต้นทุนส่วนเพิ่ม",
      "ต้นทุนผันแปร",
      "กำไรสูงสุด",
      "อุปทาน",
      "อุปสงค์",
      "Say's Law",
      "Say's",
      "marginal cost",
      "profit maximization",
      "equilibrium",
      "เศรษฐกิจ",
      "นโยบายการเงิน",
      "นโยบายการคลัง",
      "microeconomics",
      "macroeconomics",
      "price discrimination",
      "production possibilities frontier",
      "national income",
      "government spending",
      "equation of exchange",
      "monetarist",
      "ธนาคารกลาง",
      "ทุนนิยม",
      "อุตสาหกรรม",
      "อัตราดอกเบี้ย",
      "เงินเฟ้อ",
      "ภาวะเงินฝืด",
      "การเติบโตทางเศรษฐกิจ",
      "เศรษฐศาสตร์",
      "อุปสงค์และอุปทาน",
      "ดุลยภาพ",
    ],
    Ethics: [
      "COSO",
      "ethical behavior",
      "conflict of interest",
      "compliance",
      "SEC",
      "regulations",
      "governance",
      "fraud",
      "whistleblowing",
      "misconduct",
      "integrity",
      "transparency",
      "กฎระเบียบ",
      "จริยธรรม",
      "กฎหมาย",
      "กฎ",
      "UN Global Compact",
      "การกำกับดูแล",
      "การทุจริต",
      "ความโปร่งใส",
      "จรรยาบรรณ",
      "การปฏิบัติตามกฎ",
      "ผลประโยชน์ทับซ้อน",
      "มาตรการทางวินัย",
      "บทลงโทษ",
      "ความลับลูกค้า",
      "professional standards",
    ],
    Unclassified: [
      "McDonald's",
      "KFC",
      "utilitarianism",
      "philosophy",
      "political leaders",
      "history",
      "art",
      "science",
      "general knowledge",
      "miscellaneous",
      "ปรัชญา",
      "ประวัติศาสตร์",
      "ศิลปะ",
      "วิทยาศาสตร์",
      "ความรู้ทั่วไป",
      "who was",
      "คนดัง",
      "สถานที่",
      "บุคคลสำคัญ",
      "กีฬา",
      "วัฒนธรรม",
      "บันเทิง",
      "สุขภาพ",
      "อาหาร",
    ],
  };

  // Function to extract question part from query
  function extractQuestion(query) {
    const regex =
      /(?:Question:|คำถาม:)\s*(.*?)(?=\s*(?:Answer Choices:|ตัวเลือกคำตอบ:|$))/is;
    const match = query.match(regex);
    return match ? match[1].trim() : null;
  }

  // Function to classify a single question
  function classifySingleQuestion(question) {
    if (!question) return "Unclassified";
    const questionLower = question.toLowerCase();
    for (const [category, terms] of Object.entries(keywords)) {
      if (terms.some((term) => questionLower.includes(term))) {
        return category;
      }
    }
    return "Unclassified";
  }

  // Get input items
  const allItems = items; // n8n JavaScript Code node uses 'items'

  // Process the single input item
  if (allItems.length === 0) {
    return [{ json: { category: "error:no_input" } }];
  }

  // Assume single input
  const item = allItems[0];
  const query = item.json.query || "";

  // Extract and classify question
  const questionExtracted = extractQuestion(query);
  const category = classifySingleQuestion(questionExtracted);

  // Return single item with category
  return [{ json: { category, query } }];
}

return main();
